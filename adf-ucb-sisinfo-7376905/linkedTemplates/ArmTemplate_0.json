{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adf-ucb-sisinfo-7376905"
		},
		"datos_csv_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"datos_csv\""
		},
		"dw_habitaciones_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"dw_habitaciones\""
		},
		"dw_habitaciones_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-ucb-sisinfo-7376905.database.windows.net"
		},
		"dw_habitaciones_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dw-Airbnb-Europe"
		},
		"dw_habitaciones_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vanessa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/datos_csv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('datos_csv_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dw_habitaciones')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('dw_habitaciones_properties_typeProperties_server')]",
					"database": "[parameters('dw_habitaciones_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('dw_habitaciones_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('dw_habitaciones_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/airbnb_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datos_csv",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datos"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Aemf1.csv",
						"container": "datos-airbnb-europe"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "Day",
						"type": "String"
					},
					{
						"name": "Room Type",
						"type": "String"
					},
					{
						"name": "Shared Room",
						"type": "String"
					},
					{
						"name": "Private Room",
						"type": "String"
					},
					{
						"name": "Person Capacity",
						"type": "String"
					},
					{
						"name": "Superhost",
						"type": "String"
					},
					{
						"name": "Multiple Rooms",
						"type": "String"
					},
					{
						"name": "Business",
						"type": "String"
					},
					{
						"name": "Cleanliness Rating",
						"type": "String"
					},
					{
						"name": "Guest Satisfaction",
						"type": "String"
					},
					{
						"name": "Bedrooms",
						"type": "String"
					},
					{
						"name": "City Center (km)",
						"type": "String"
					},
					{
						"name": "Metro Distance (km)",
						"type": "String"
					},
					{
						"name": "Attraction Index",
						"type": "String"
					},
					{
						"name": "Normalised Attraction Index",
						"type": "String"
					},
					{
						"name": "Restraunt Index",
						"type": "String"
					},
					{
						"name": "Normalised Restraunt Index",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datos_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_ciudad')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_habitaciones",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ciudad",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_CIUDAD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_habitaciones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_dia')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_habitaciones",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "dia",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_DIA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_habitaciones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_hechos_habitaciones')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_habitaciones",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ciudad",
						"type": "varchar"
					},
					{
						"name": "dia",
						"type": "varchar"
					},
					{
						"name": "tipo_habitacion",
						"type": "varchar"
					},
					{
						"name": "precio",
						"type": "decimal",
						"precision": 20,
						"scale": 16
					},
					{
						"name": "capacidad",
						"type": "int",
						"precision": 10
					},
					{
						"name": "guest_satisfaction",
						"type": "int",
						"precision": 10
					},
					{
						"name": "bedrooms",
						"type": "int",
						"precision": 10
					},
					{
						"name": "shared_room",
						"type": "bit"
					},
					{
						"name": "private_room",
						"type": "bit"
					},
					{
						"name": "multiple_room",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_HECHOS_HABITACIONES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_habitaciones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_tipo_habitacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_habitaciones",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tipo_habitacion",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_TIPO_HABITACION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dw_habitaciones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_ciudad')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "airbnb_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dim_ciudad",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          City as string,",
						"          Price as string,",
						"          Day as string,",
						"          {Room Type} as string,",
						"          {Shared Room} as string,",
						"          {Private Room} as string,",
						"          {Person Capacity} as string,",
						"          Superhost as string,",
						"          {Multiple Rooms} as string,",
						"          Business as string,",
						"          {Cleanliness Rating} as string,",
						"          {Guest Satisfaction} as string,",
						"          Bedrooms as string,",
						"          {City Center (km)} as string,",
						"          {Metro Distance (km)} as string,",
						"          {Attraction Index} as string,",
						"          {Normalised Attraction Index} as string,",
						"          {Restraunt Index} as string,",
						"          {Normalised Restraunt Index} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          City",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(!isNull(City)) ~> filter1",
						"filter1 aggregate(groupBy(City),",
						"     each(match(name!='City'), $$ = first($$))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ciudad as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ciudad = City",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/airbnb_csv')]",
				"[concat(variables('factoryId'), '/datasets/dim_ciudad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_dia')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "airbnb_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dim_dia",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          City as string,",
						"          Price as string,",
						"          Day as string,",
						"          {Room Type} as string,",
						"          {Shared Room} as string,",
						"          {Private Room} as string,",
						"          {Person Capacity} as string,",
						"          Superhost as string,",
						"          {Multiple Rooms} as string,",
						"          Business as string,",
						"          {Cleanliness Rating} as string,",
						"          {Guest Satisfaction} as string,",
						"          Bedrooms as string,",
						"          {City Center (km)} as string,",
						"          {Metro Distance (km)} as string,",
						"          {Attraction Index} as string,",
						"          {Normalised Attraction Index} as string,",
						"          {Restraunt Index} as string,",
						"          {Normalised Restraunt Index} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          Day",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(!isNull(Day)) ~> filter1",
						"filter1 aggregate(groupBy(Day),",
						"     each(match(name!='Day'), $$ = first($$))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          dia as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          dia = Day",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/airbnb_csv')]",
				"[concat(variables('factoryId'), '/datasets/dim_dia')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dim_tipo_habitacion')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "airbnb_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dim_tipo_habitacion",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          City as string,",
						"          Price as string,",
						"          Day as string,",
						"          {Room Type} as string,",
						"          {Shared Room} as string,",
						"          {Private Room} as string,",
						"          {Person Capacity} as string,",
						"          Superhost as string,",
						"          {Multiple Rooms} as string,",
						"          Business as string,",
						"          {Cleanliness Rating} as string,",
						"          {Guest Satisfaction} as string,",
						"          Bedrooms as string,",
						"          {City Center (km)} as string,",
						"          {Metro Distance (km)} as string,",
						"          {Attraction Index} as string,",
						"          {Normalised Attraction Index} as string,",
						"          {Restraunt Index} as string,",
						"          {Normalised Restraunt Index} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          {Room Type}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 aggregate(groupBy({Room Type}),",
						"     each(match(name!='Room Type'), $$ = first($$))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          tipo_habitacion as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          tipo_habitacion = {Room Type}",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/airbnb_csv')]",
				"[concat(variables('factoryId'), '/datasets/dim_tipo_habitacion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_hechos_habitaciones')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "airbnb_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dim_hechos_habitaciones",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "sort1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          City as string,",
						"          Price as string,",
						"          Day as string,",
						"          {Room Type} as string,",
						"          {Shared Room} as string,",
						"          {Private Room} as string,",
						"          {Person Capacity} as integer,",
						"          Superhost as string,",
						"          {Multiple Rooms} as string,",
						"          Business as string,",
						"          {Cleanliness Rating} as string,",
						"          {Guest Satisfaction} as integer,",
						"          Bedrooms as integer,",
						"          {City Center (km)} as string,",
						"          {Metro Distance (km)} as string,",
						"          {Attraction Index} as string,",
						"          {Normalised Attraction Index} as string,",
						"          {Restraunt Index} as string,",
						"          {Normalised Restraunt Index} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          City,",
						"          Price,",
						"          Day,",
						"          {Room Type},",
						"          {Shared Room},",
						"          {Private Room},",
						"          {Person Capacity},",
						"          {Multiple Rooms},",
						"          {Guest Satisfaction},",
						"          Bedrooms",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sort(asc(City, true)) ~> sort1",
						"sort1 derive(Price = toFloat(replace(Price, ',', '.')),",
						"          {Shared Room} = iif({Shared Room}==\"True\", 1, 0),",
						"          {Private Room} = iif({Private Room}==\"True\", 1, 0)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as integer,",
						"          ciudad as string,",
						"          dia as string,",
						"          tipo_habitacion as string,",
						"          precio as decimal(20,16),",
						"          capacidad as integer,",
						"          guest_satisfaction as integer,",
						"          bedrooms as integer,",
						"          shared_room as boolean,",
						"          private_room as boolean,",
						"          multiple_room as boolean",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ciudad = City,",
						"          dia = Day,",
						"          tipo_habitacion = {Room Type},",
						"          precio = Price,",
						"          capacidad = {Person Capacity},",
						"          guest_satisfaction = {Guest Satisfaction},",
						"          bedrooms = Bedrooms,",
						"          shared_room = {Shared Room},",
						"          private_room = {Private Room},",
						"          multiple_room = {Multiple Rooms}",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/airbnb_csv')]",
				"[concat(variables('factoryId'), '/datasets/dim_hechos_habitaciones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/etl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dim_ciudad",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dim_dia",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow3",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dim_tipo_habitacion",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow4",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_hechos_habitaciones",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_dim_ciudad')]",
				"[concat(variables('factoryId'), '/dataflows/df_dim_dia')]",
				"[concat(variables('factoryId'), '/dataflows/df_dim_tipo_habitacion')]",
				"[concat(variables('factoryId'), '/dataflows/df_hechos_habitaciones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_hechos_habitaciones')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_hechos_habitaciones",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_hechos_habitaciones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prueba_dim_ciudad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dim_ciudad",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_dim_ciudad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prueba_dim_dia')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dim_dia",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_dim_dia')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prueba_dim_tipo_habitacion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dim_tipo_habitacion",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_dim_tipo_habitacion')]"
			]
		}
	]
}